name: tests and sonarcloud scan

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, ready_for_review, synchronize, converted_to_draft]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: master

      # - name: Determine master HEAD commit hash
      #   id: master_head_commit
      #   run: echo "::set-output name=hash::$(git rev-parse origin/master)"
      # - run: echo "master branch HEAD hash commit is ${{ steps.master_head_commit.outputs.hash }}"

      # - run: echo "current branch HEAD hash commit is ${{ github.event.pull_request.head.sha }}"

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Installing dependencies
        run: pnpm install --frozen-lockfile

      - name: Starting nx cloud CI
        run: pnpm exec nx-cloud start-ci-run

      - name: Linting
        run: pnpm exec nx affected --target=lint --parallel --max-parallel=3
        timeout-minutes: 10

      - name: Types checking
        run: pnpm exec nx affected --target=type-check --parallel --max-parallel=3
        timeout-minutes: 10

      - name: Tests
        #run: npx jest ./apps/front/src/components/signup/Signup.spec.tsx
        run: pnpm exec nx affected --target=test --parallel --max-parallel=3 --codeCoverage
        # run: pnpm exec nx run-many --target=test --all --parallel --max-parallel=3 --codeCoverage
        timeout-minutes: 10

      - name: Check if coverage folder exists
        id: coverage-folder
        run: |
          if  [ -d ./coverage ]; then
            echo "::set-output name=exists::true"
          fi

      - name: Installing lcov 
        # Executing this only if coverage has evolved somewhere (nx affected)
        if: steps.coverage-folder.outputs.exists == 'true'
        run: sudo apt-get install -y lcov
        
      - name: Merge coverage
        # Executing this only if coverage has evolved somewhere (nx affected)
        if: steps.coverage-folder.outputs.exists == 'true'
        run: find ./coverage -name "lcov.info" | awk '$0="-a "$0' | xargs lcov -o ./coverage/lcov.info

      - name: SonarCloud Scan
        # Executing this only if coverage has evolved somewhere (nx affected)        
        if: steps.coverage-folder.outputs.exists == 'true'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: End to end tests
      #   run: pnpm exec nx affected --target=e2e --parallel --max-parallel=3 --codeCoverage
      #   timeout-minutes: 10

      - name: Stopping nx cloud CI
        run: pnpm exec nx-cloud stop-all-agents
  
  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    
    strategy:
      matrix:
        agent: [1, 2, 3]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
            
      - name: Installing dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Start Nx Agent ${{ matrix.agent }}
        run: pnpm exec nx-cloud start-agent
